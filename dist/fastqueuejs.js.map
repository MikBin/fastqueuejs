{"version":3,"file":null,"sources":["/home/miche/SpiderOak Hive/projects/FastQueueJs/src/js/main.js"],"sourcesContent":["/**\n * ------------------------------------------------------------------------\n * Class Definitions\n * ------------------------------------------------------------------------\n */\n\nconst FastQueueJs = (() => {\n    class FastQueueJs {\n        constructor(sizeLimit = 1024) {\n            this._limit = ~~sizeLimit;\n            this._queue = [];\n            this._first = 0;\n        }\n\n        enqueue(value) {\n            this._queue.push(value);\n\n            return this;\n        };\n        dequeue() {\n            /**should throw if empty? */\n            let out;\n            if (!this.isEmpty()) {\n                out = this._queue[this._first];\n                this._first++;\n                if (this._first === this._limit) {\n                    this.removeDequeued();\n                }\n            }\n\n            return out;\n        };\n        removeDequeued() {\n            let l = this._queue.length,\n                i = this._first,\n                queue = this._queue;\n            while (i > 0) {\n                l--;\n                i--;\n                queue[i] = queue[l];\n\n            }\n\n            queue.length = queue.length - this._first;\n            this._first = 0;\n        };\n        enqueueMany(list) {\n            if (list.length) {\n                this._queue.push(...list);\n\n            }\n            return this;\n        };\n        dequeueMany(howMany) {\n            let l = this.getLength();\n\n            if (howMany <= l) {\n                let first = this._first;\n                this._first += howMany;\n                let out = this._queue.slice(first, first + howMany);\n                if (this._first >= this._limit) {\n                    this.removeDequeued();\n                }\n\n                return out;\n            } else {\n                return this.flush();\n            }\n        };\n        isEmpty() {\n            return this.getLength() === 0;\n        };\n        flush() {\n            if (this.getLength() === 0) {\n                return [];\n            }\n            this.removeDequeued();\n            let queue = this._queue;\n            this._queue = [];\n            this._first = 0;\n            return queue;\n        };\n        peek(n = 1) {\n            if (n === 1) {\n                return this._queue[this._first];\n            } else {\n\n                let max = this._first + n;\n                if (max >= this._queue.length) {\n                    return this._queue.slice(this._first);\n                }\n\n                return this._queue.slice(this._first, this._first + n);\n            }\n\n        };\n        last(n = 1) {\n            if (n === 1) {\n                return this._queue[this._queue.length - 1];\n            } else {\n                if (n < this.getLength()) {\n                    return this._queue.slice(this._queue.length - n);\n                }\n                return this._queue.slice(this._first);\n            }\n        };\n        getLength() {\n            return this._queue.length - this._first;\n        };\n        setLimit(sizeLimit) {\n            this._limit = !isNaN(sizeLimit) ? ~~sizeLimit : 1024;\n        };\n\n    };\n    return FastQueueJs;\n})();\n\nexport default FastQueueJs;"],"names":["FastQueueJs","sizeLimit","_limit","_queue","_first","value","push","out","isEmpty","removeDequeued","l","length","i","queue","list","howMany","getLength","first","slice","flush","n","max","isNaN"],"mappings":"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"}